import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Travel form',
      theme: ThemeData(
        primarySwatch: Colors.orange,
      ),
      home: const MyHomePage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key}) : super(key: key);

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Center(
          child: Padding(
            padding: const EdgeInsets.all(15.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.start,
              children: [
                Padding(
                  padding: const EdgeInsets.only(left:10.0),
                  child: Text("Find Your Perfect",style: TextStyle(fontSize: 20,fontWeight: FontWeight.bold,color: const Color(0xffFE8135)),),
                ),
                // DropdownButton(
                //
                //   // Initial Value
                //   value: dropdownvalue,
                //
                //   // Down Arrow Icon
                //   icon: const Icon(Icons.keyboard_arrow_down),
                //
                //   // Array list of items
                //   items: items.map((String items) {
                //     return DropdownMenuItem(
                //       value: items,
                //       child: Text(items,style: TextStyle(color: const Color(0xff73737F)),),
                //     );
                //   }).toList(),
                //   // After selecting the desired option,it will
                //   // change button value to selected value
                //   onChanged: (String? newValue) {
                //     setState(() {
                //       dropdownvalue = newValue!;
                //     });
                //   },
                //
                // ),
                SizedBox(height: 10,),
                Text("Travel Plan",style: TextStyle(fontSize: 30,fontWeight: FontWeight.bold,color: const Color(0xffFE8135)),),
                // DropdownButton(

                // Initial Value
                // value: dropdownvalue1,
                //
                // // Down Arrow Icon
                // icon: Icon(Icons.keyboard_arrow_down),
                //
                // // Array list of items
                // items: items1.map((String items1) {
                //   return DropdownMenuItem(
                //     value: items1,
                //     child: Text(items1,style: TextStyle(color: const Color(0xff73737F))),
                //   );
                // }).toList(),
                // // After selecting the desired option,it will
                // // change button value to selected value
                // onChanged: (String? newValue) {
                //   setState(() {
                //     dropdownvalue1 = newValue!;
                //   });
                // },

                // ),
                SizedBox(height: 20,),

                MyCustomForm(),

              ],
            ),
          ),
        ),
      ),
    );
  }
}

// Create a Form widget.
class MyCustomForm extends StatefulWidget {
  @override
  MyCustomFormState createState() {
    return MyCustomFormState();
  }
}
// Create a corresponding State class. This class holds data related to the form.
class MyCustomFormState extends State<MyCustomForm> {
  // Create a global key that uniquely identifies the Form widget
  // and allows validation of the form.
  final _formKey = GlobalKey<FormState>();
  String? _Travel;

  List _List = [
    "India",
    "Afganistan",
    "Africa",
    "America",
    "Brazil"
  ];

  String? _Plan;
  List _List1 = [
    "Individual/Family",
  ];

  String? _Trip;
  List _List2 = [
    "Monthly",
    "Yearly",
  ];

  TextEditingController _number = TextEditingController();
  DateTime selectedDate = DateTime.now();


  Future<void> _selectDate(BuildContext context) async {
    var currentDate;
    final DateTime? pickedDate = await showDatePicker(
        context: context,
        initialDate: currentDate,
        firstDate: DateTime(2015),
        lastDate: DateTime(2050));
    if (pickedDate != null && pickedDate != currentDate)
      setState(() {
        currentDate = pickedDate;
      });
  }
  //
  // String? _valScroll;
  //
  // List _List3 = [ "18 Years", "19 Years","20 Years","21 Years","22 Years",
  //   "23 Years","24 Years","25 Years","26 Years","27 Years","28 Years","29 Years",
  //   "30 Years"
  // ];

  @override
  Widget build(BuildContext context) {
    // Build a Form widget using the _formKey created above.
    return Form(
      key: _formKey,
      child: SingleChildScrollView(
        child: Center(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            mainAxisAlignment: MainAxisAlignment.start,

            children: <Widget>[
              // Text("ENTER YOUR DETAILS",style: TextStyle(fontSize: 18,fontWeight: FontWeight.bold,color: const Color(0xffFE8135)),),
              Padding(
                padding: EdgeInsets.all(10.0),
                child: Container(
                  child: DropdownButtonFormField<String>(
                    decoration: InputDecoration(
                      border: OutlineInputBorder(),
                    ),
                    hint: Text("Where you want to travel"),
                    value: _Travel,
                    items: _List.map((value) {
                      return DropdownMenuItem<String>(
                        child: Text(value,style: TextStyle(color: Color(0xff73737F)),),
                        value: value,
                      );
                    }).toList(),
                    onChanged: (String? value) {
                      setState(() {
                        _Travel = value!;
                      });
                    },
                  ),
                ),
              ),
              SizedBox(height: 1.0,),
              Padding(
                padding: EdgeInsets.all(10.0),
                child: Container(
                  child: DropdownButtonFormField<String>(
                    decoration: InputDecoration(
                      border: OutlineInputBorder(),
                    ),
                    hint: Text("Plan Type"),
                    value: _Plan,
                    items: _List1.map((value) {
                      return DropdownMenuItem<String>(
                        child: Text(value,style: TextStyle(color: Color(0xff73737F)),),
                        value: value,
                      );
                    }).toList(),
                    onChanged: (String? value) {
                      setState(() {
                        _Plan = value!;
                      });
                    },
                  ),
                ),
              ),
              SizedBox(height: 1.0,),
              Padding(
                padding: EdgeInsets.all(10.0),
                child: Container(
                  margin: EdgeInsets.symmetric(horizontal: 5),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      Text('Frequency : ',style: TextStyle(fontSize: 15),),
                      SizedBox(width: 10,),
                      Radio(
                        value: 'Trip',
                        groupValue: _Trip,
                        onChanged: (String? value) {
                          setState(() {
                            _Trip = value!;
                          });
                        },
                      ),
                      Text('Single Trip'),
                      SizedBox(width: 15,),
                      Radio(
                        value: 'Yearly',
                        groupValue: _Trip,
                        onChanged: (String? value) {
                          setState(() {
                            _Trip = value!;
                          });
                        },
                      ),
                      Text('Multi Trip'),
                    ],
                  ),
                ),
              ),
              SizedBox(height: 1.0,),
              Padding(
                padding: EdgeInsets.all(10.0),
                child:
                Container(
                  child: TextFormField(
                    validator: (phone) {
                      Pattern pattern = r'(^(?:[+0]9)?[0-9]{10,}$)';
                      RegExp regExp =
                      new RegExp(r'(^(?:[+0]9)?[0-9]{10,}$)');
                      if (phone!.length == 0) {
                        return 'Please enter mobile number';
                      } else if (!regExp.hasMatch(phone)) {
                        return 'Please enter valid mobile number';
                      }
                      return null;
                    },
                    maxLength: 10,
                    keyboardType: TextInputType.number,
                    style: TextStyle(color: Colors.black),
                    decoration: InputDecoration(
                      counterText: "",
                      border: OutlineInputBorder(),
                      labelText: 'Mobile',
                      hintText: 'Enter Mobile No.',

                    ),
                    controller: _number,
                  ),
                ),
              ),
              SizedBox(height: 1.0,),
              
              Row(
                children: [
                  Container(
                    padding: EdgeInsets.all(10),
                    margin: EdgeInsets.only(left: 6),
                      child: Text("Travellers : ",textAlign: TextAlign.start,style: TextStyle(fontSize: 16),)),
                ],
              ),
              
              Padding(
                padding: const EdgeInsets.all(6.0),
                child: Container(
                  margin: EdgeInsets.symmetric(horizontal: 5),
                  child: Row(
                    children: [
                      Expanded(
                        child: TextField(
                          decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'Adult 1',
                             hintText: 'Age',
                          ),
                        ),
                      ),
                      SizedBox(width: 5),
                      Expanded(
                        child: TextField(
                          decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'Adult 2',
                             hintText: 'Age',
                          ),
                        ),
                      ),
                      SizedBox(width: 5),
                      Expanded(
                        child: TextField(
                          decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'Child 1',
                            // hintText: 'Enter Mobile Number',
                          ),
                        ),
                      ),
                      SizedBox(width: 5),
                      Expanded(
                        child: TextField(
                          decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            labelText: 'Child 2',
                            hintText: 'Age',
                          ),
                        ),
                      ),

                    ],
                  ),
                ),
              ),
              SizedBox(height: 5,),

              Padding(
                padding: const EdgeInsets.all(10.0),
                child: Row(
                  children: [
                    Text("Start Date : "),
                    SizedBox(width: 10),
                    Text("${selectedDate.day}/${selectedDate.month}/${selectedDate.year}"
                    ),
                    SizedBox(width: 10,),
                    RaisedButton(
                      onPressed: () {
                        _selectDate(context);
                      },
                      child: Text("Choose Date"),
                    ),


                  ],
                ),
              ),

              Padding(
                padding: const EdgeInsets.all(10.0),
                child: Row(
                  children: [
                    Text("End Date : "),
                    SizedBox(width: 15),
                    Text("${selectedDate.day}/${selectedDate.month}/${selectedDate.year}"
                    ),
                    SizedBox(width: 10,),
                    RaisedButton(
                      onPressed: () {
                        _selectDate(context);
                      },
                      child: Text("Choose Date"),
                    ),


                  ],
                ),
              ),








              // SizedBox(height: 1,),
              //
              // Padding(
              //   padding: EdgeInsets.all(10.0),
              //   child: Container(
              //     child: DropdownButtonFormField<String>(
              //       decoration: InputDecoration(
              //         border: OutlineInputBorder(),
              //       ),
              //       hint: Text("Income"),
              //       value: _Income,
              //       items: _List2.map((value) {
              //         return DropdownMenuItem<String>(
              //           child: Text(value,style: TextStyle(color: Color(0xff73737F)),),
              //           value: value,
              //         );
              //       }).toList(),
              //       onChanged: (String? value) {
              //         setState(() {
              //           _Income = value!;
              //         });
              //       },
              //     ),
              //   ),
              // ),
              //
              // SizedBox(height: 1,),
              // Padding(
              //   padding: const EdgeInsets.all(10.0),
              //   child: Container(
              //     child: TextField(
              //       obscureText: true,
              //       decoration: InputDecoration(
              //         border: OutlineInputBorder(),
              //         labelText: 'Pincode',
              //         hintText: 'Enter Pincode',
              //       ),
              //     ),
              //   ),
              // ),
              // SizedBox(height: 1,),
              // Container(
              //   padding: EdgeInsets.all(10),
              //   child: TextField(
              //     decoration: InputDecoration(
              //       border: OutlineInputBorder(),
              //       labelText: 'Mobile No.',
              //       hintText: 'Enter Mobile Number',
              //     ),
              //   ),
              //
              // ),
              // //

              Container(
                height: 40,

                margin: EdgeInsets.symmetric(vertical: 20),
                child: TextButton(
                    style: ButtonStyle(
                      backgroundColor: MaterialStateProperty.resolveWith<Color>(
                            (Set<MaterialState> states) => const Color(0xffFE8135),
                      ),
                      overlayColor: MaterialStateProperty.all(Colors.transparent),
                      shape: MaterialStateProperty.all(
                          RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(50),
                          )
                      ),
                    ),
                    onPressed: () {
                      print('pressed');
                    },
                    child: Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 10),
                      child: Text(
                        'VIEW QUOTES',
                        style: TextStyle(
                          fontSize: 15,
                          color: Colors.white,),
                        textAlign: TextAlign.center,
                      ),
                    )
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}